{"version":3,"sources":["components/profile/Profile.module.css","components/transactionsHistory/transactionList/TransactionList.module.css","components/statistics/Statistics.module.css","components/friendList/friendListItem/FriendListItem.module.css","components/transactionsHistory/TransactionHistory.module.css","components/friendList/FriendList.module.css","components/profile/Profile.jsx","components/statistics/getRandomColor.js","components/statistics/Statistics.jsx","components/friendList/friendListItem/FriendListItem.jsx","components/friendList/FriendList.jsx","components/transactionsHistory/TransactionHistory.jsx","components/transactionsHistory/transactionList/TransactionList.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","style","profile","description","src","alt","userImg","list","Object","entries","map","key","value","label","quantity","getRandomColor","Math","floor","random","toString","Statistics","title","statistics","backgroundColor","item","percentage","id","FriendListItem","isOnline","status","width","FriendList","friendsList","friends","TransactionHistory","transaction","type","amount","currency","TransactionList","transactions","table","thead","text","tbody","App","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.030c4d66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pCZd\",\"userImg\":\"Profile_userImg__rWQf7\",\"name\":\"Profile_name__20bij\",\"description\":\"Profile_description__39O8_\",\"list\":\"Profile_list__30BN6\",\"stats\":\"Profile_stats__2oNbu\",\"label\":\"Profile_label__3VFdQ\",\"quantity\":\"Profile_quantity__2g3X6\",\"location\":\"Profile_location__KQ1a3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TransactionList_text__OIC_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__yl5hx\",\"title\":\"Statistics_title__3xCaC\",\"list\":\"Statistics_list__1_KKU\",\"item\":\"Statistics_item__3kiOE\",\"wrapper\":\"Statistics_wrapper__2xKAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1WNV0\",\"status\":\"FriendListItem_status__3_Ah-\",\"disabled\":\"FriendListItem_disabled__enQhp\",\"active\":\"FriendListItem_active__1CQu7\",\"avatar\":\"FriendListItem_avatar__uLsSe\",\"name\":\"FriendListItem_name__2BjhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TransactionHistory_list__2XGwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__3jK03\"};","import PropTypes from \"prop-types\";\nimport style from \"./Profile.module.css\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <img src={avatar} alt={name} className={style.userImg} />\n        <p className={style.name}>{name}</p>\n        <p className={style.tag}>{tag}</p>\n        <p className={style.location}>{location}</p>\n      </div>\n      <ul className={style.list}>\n        {Object.entries(stats).map(([key, value]) => (\n          <li className={style.stats} key={key}>\n            <span className={style.label}>{key}</span>\n            <span className={style.quantity}>{value}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }).isRequired,\n};\nexport default Profile;\n","const getRandomColor = () => {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n};\n\nexport default getRandomColor;\n","import PropTypes from \"prop-types\";\nimport getRandomColor from \"./getRandomColor\";\nimport style from \"./Statistics.module.css\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section\n      className={style.statistics}\n      style={{ backgroundColor: getRandomColor() }}\n    >\n      {title && (\n        <h2\n          className={style.title}\n          style={{ backgroundColor: getRandomColor() }}\n        >\n          {title}\n        </h2>\n      )}\n      <ul className={style.list}>\n        {stats.map((item) => (\n          <li\n            className={style.item}\n            key={item.id}\n            style={{ backgroundColor: getRandomColor() }}\n          >\n            <span className={style.label}>{item.label}</span>\n            <span className={style.percentage}>{item.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport style from \"./FriendListItem.module.css\";\n\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\n  return (\n    <li className={style.item} key={id}>\n      <span\n        className={style.status}\n        style={{ backgroundColor: isOnline ? \"red\" : \"green\" }}\n      >\n        {isOnline}\n      </span>\n      <img className={style.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={style.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n};\nexport default FriendListItem;\n","import PropTypes from \"prop-types\";\nimport FriendListItem from \"./friendListItem/FriendListItem\";\nimport friends from \"../../data/friends.json\";\nimport style from \"./FriendList.module.css\";\n\nconst FriendList = () => {\n  const friendsList = friends.map((item) => (\n    <FriendListItem key={item.id} {...item} />\n  ));\n  return <ul className={style.list}>{friendsList}</ul>;\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\nexport default FriendList;\n","import PropTypes from \"prop-types\";\nimport style from \"./TransactionHistory.module.css\";\nconst TransactionHistory = ({ transaction }) => {\n  return (\n    <>\n      <tr>\n        <td className={style.list}>{transaction.type}</td>\n        <td className={style.list}>{transaction.amount}</td>\n        <td className={style.list}>{transaction.currency}</td>\n      </tr>\n    </>\n  );\n};\n\nTransactionHistory.propTypes = {\n  type: PropTypes.string,\n  amount: PropTypes.number,\n  currency: PropTypes.string,\n}.isRequired;\n\nexport default TransactionHistory;\n","import PropTypes from \"prop-types\";\nimport TransactionHistory from \"../TransactionHistory\";\nimport style from \"./TransactionList.module.css\";\n\nconst TransactionList = ({ transactions }) => {\n  return (\n    <table className={style.table}>\n      <thead className={style.thead}>\n        <tr className={style.title}>\n          <th className={style.text}>Type</th>\n          <th className={style.text}>Amount</th>\n          <th className={style.text}>Currency</th>\n        </tr>\n      </thead>\n      <tbody className={style.tbody}>\n        {transactions.map((transaction) => (\n          <TransactionHistory key={transaction.id} transaction={transaction} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionList.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\nexport default TransactionList;\n","import \"./App.css\";\nimport Profile from \"./components/profile/Profile\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport FriendList from \"./components/friendList/FriendList\";\nimport TransactionList from \"./components/transactionsHistory/transactionList/TransactionList\";\nimport { name, tag, location, avatar, stats } from \"./data/user.json\";\nimport friends from \"./data/friends.json\";\nimport statisticalData from \"./data/statistical-data.json\";\nimport transactions from \"./data/transactions.json\";\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={name}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionList transactions={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}